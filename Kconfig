mainmenu "Nautilus Kernel Configuration"


config USE_NAUT_BUILTINS
    bool "Use GCC Built-in Utility Functions"
    default y
    help
      Compiles the Nuatilus kernel with built-in functions
      like __builtin_strcpy etc., as opposed to Nautilus
      versions, the full set of which may not be supported

config MAX_CPUS
	int "Maximum Number of CPUs"
	range 1 2048
	default "256"
	help 
	  Specifies the maximum number of hardware CPUs supported by Nautilus 
	  For uniprocessor environments, set this to 1

config MAX_IOAPICS
    int "Maximum Number of IOAPICS"
    range 1 255
    default "16"
    help
      Specifies the maximum number of IOAPICS supported by Nautilus

config CXX_SUPPORT
    bool "Enable C++ support"
    default n
    help
        Compiles the Nautilus kernel with C++ support. Necessary for,
        e.g. Legion integration

config HVM_HRT
    bool "Compile Nautilus as an HRT"
    default n
    help
      Compiles Nautilus in a Hybrid Runtime (HRT) environment

config FPU_SAVE
    bool "Save FPU state on all context switches"
    default y
    help
       Compiles the kernel to save FPU state on every context switch

config THREAD_EXIT_KEYCODE
    int "Thread Exit Keycode"
    range 1 255
    default "196"
    help
        uses a special thread exit keycode

config SILENCE_UNDEF_ERR
    bool "Silence Errors for Undefined Functions"
    default n
    help
      Mutes error prints related to undefined 
      libc compatibility functions

config USE_TICKETLOCKS
    bool "Use Ticket/Bakery locks instead of default spin"
    default n
    help
      Uses ticketlocks (similar to Linux impl.) instead of
      default spinlocks
    

menu "Performance Optimizations"
    
    config KICK_SCHEDULE
        bool "Kick cores with IPIs on scheduling events"
        default n
        help
          This will reduce the latency and variance of scheduling events
          by kicking the remote CPU with an IPI, causing a scheduling event
          to occur immediately, rather than waiting for next timer tick or
          current thread to yield.

    config HALT_WHILE_IDLE
        bool "Halt the CPU when idle"
        default n
        help
            This will cause the CPU to go into a halt in an idle thread when
            there is nothing else important to run. Can potentially reduce
            memory traffic do to yields(), especially on platforms like the 
            Xeon Phi.

    config THREAD_OPTIMIZE
        bool "Optimize threading for performance"
        default n
        help
            Disables paranoid condition checking and optimizes thread functions
            for maximum performance.

    config USE_IDLE_THREADS
        bool "Start idle threads on all cores"
        default n
        help
            Enables idle threads to start in addition to the main boot threads. 
            Usually not needed.


endmenu

    

menu Debugging

    config DEBUG_INFO
      bool "Compile with Debug Symbols"
      default n
      help
        Compiles Nautilus with GCC debugging information

    config DEBUG_PRINTS
  	  bool "Enable Debugging Prints"
	  default n
	  help
	    Compiles the Nautilus kernel with debugging prints

    config ENABLE_ASSERTS
      bool "Enable Runtime Assertions"
      default n
      help
        This will enable runtime assert statements. If this is
        disabled, they will not be generated

    config PROFILE
      bool "Enable Profiling"
      default n
      help
        Profile select function entries and exits

    config ENABLE_STACK_CHECK
    bool "Enable Runtime Stack Overrun Checking"
    default n
    help
      This checks the stack pointer on every thread switch to
      make sure that a thread hasn't overrun its allocated 
      stack

    config DEBUG_PAGING
      bool "Debug Paging"
      depends on DEBUG_PRINTS
      default n
      help
        Turn on debug prints for paging subsystem

    config DEBUG_BOOTMEM
      bool "Debug Bootmem Allocator"
      depends on DEBUG_PRINTS
      default n
      help
        Turn on debugging for the boot memory allocator

    config DEBUG_BUDDY
      bool "Debug Buddy Allocator"
      depends on DEBUG_PRINTS
      default n
      help
        Turn on debugging for the buddy allocator

    config DEBUG_KMEM
      bool "Debug Kernel Memory Allocator"
      depends on DEBUG_PRINTS
      default n
      help
         Turn on debugging for the high-level kernel
         memory allocator (malloc/free)

    config DEBUG_FPU
      bool "Debug FPU"
      depends on DEBUG_PRINTS
      default n
      help
        Turn on debug prints for FPU related code (SIMD,MMX,SSE,etc.)

    config DEBUG_SMP
      bool "Debug SMP"
      depends on DEBUG_PRINTS
      default n
      help
        Turn on debug prints for SMP code

    config DEBUG_SFI
      bool "Debug SFI"
      depends on DEBUG_PRINTS
      default n
      help 
        Turn on debug prints for SFI platform firmware code

    config DEBUG_CXX
      bool "Debug C++"
      depends on DEBUG_PRINTS
      default n
      help
        Turn on debug prints for C++ initialization/support code

    config DEBUG_THREADS
      bool "Debug Threads"
      depends on DEBUG_PRINTS
      default n
      help
        Turn on debug prints for the scheduler/threads

    config DEBUG_SYNCH
      bool "Debug Synchronization"
      depends on DEBUG_PRINTS
      default n
      help
        Turns on debug prints for synchronization functions
        (rwlock, condvar)

    config DEBUG_BARRIER
      bool "Debug Barriers"
      depends on DEBUG_PRINTS
      default n
      help
        Turns on debug prints for barriers

    config DEBUG_NUMA
      bool "Debug NUMA code"
      depends on DEBUG_PRINTS
      default n
      help
        Turns on debug prints for NUMA code

    
endmenu

menu "Platform Options"
    choice
        prompt "Target Selection"
        default X86_64_HOST

        config X86_64_HOST
            bool "x86_64 Host"

        config XEON_PHI
            bool "Intel Xeon Phi Accelerator"

    endchoice

endmenu


menu "Parallel Run-time Integration"

    choice 
        prompt "Selection of Parallel Run-time"
        default NO_RT

        config LEGION_RT
          bool "Legion RT"
          depends on CXX_SUPPORT
          
        config LEGION_RT_ROOT
            string "Legion RT Root"
            depends on LEGION_RT
            help 
              Directory where the intended Legion run-time is installed

        config LEGION_RT_DEBUG
            bool "Legion RT Deep Debugging"
            default n
            depends on LEGION_RT
            help
              Turns on deep debugging prints for legion runtime in Nautilus

        config NDPC_RT
          bool  "NDPC RT"
          depends on CXX_SUPPORT

        config NDPC_RT_ROOT
            string "NDPC RT Root"
            depends on NDPC_RT
            help 
              Directory where the intended NDPC run-time is installed

        config NDPC_RT_TEST_OBJ
            string "NDPC RT Test Object File"
            depends on NDPC_RT
            help 
              File that contains a function test_ndpc()

        config NESL_RT
          bool  "NESL RT"

        config NESL_RT_ROOT
            string "NESL RT Root"
            depends on NESL_RT
            help 
              Directory where the intended NESL run-time is installed

        config NESL_NDPC_RT_ROOT
            string "NESL NDPC RT Root"
            depends on NESL_RT
            help 
              Directory where the intended NDPC run-time is installed

        config NO_RT
          bool "No parallel run-time"
          
     endchoice
        

endmenu


menu "Build Config"

    config TOOLCHAIN_ROOT
      string "Toolchain Root"
      help 
       Directory where the intended GCC toolchain, binutils, libraries, grub, etc are installed.


endmenu


source "src/dev/Kconfig"

